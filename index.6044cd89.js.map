{"mappings":"ACAA,OAAO,gBAAgB,CAAC,mBAAoB,KAC1C,IAAM,EAAiB,SAAS,cAAc,CAAC,WAC3C,GACF,CAAA,EAAe,WAAW,CAAG,OAAO,WAAW,EAAI,SADrD,EAGA,IAAM,EAAY,sBACZ,EAAQ,CAAC,MAAO,QAAS,MAAO,MAAM,CAE5C,SAAS,IACP,IAAM,EAAM,IAAI,KAIV,EAAe,AADD,KAAK,KAAK,CAAC,AAAC,CAAA,EAFlB,IAAI,KAAK,EAEe,EADrB,QAEkB,EAAM,MAAM,CACzC,EAAe,CAAK,CAAC,EAAa,CAClC,EAAY,AAAC,CAAA,EAAe,CAAA,EAAK,EAAM,MAAM,CAEnD,MAAO,CAAE,aAAA,EAAc,aAAA,EAAc,UADnB,CAAK,CAAC,EAAU,CACc,IAAA,CAAI,CACtD,CAUA,SAAS,EAAW,CAAI,EAStB,OAAO,EAAK,cAAc,CAAC,QARX,CACd,IAAK,UACL,MAAO,UACP,KAAM,UACN,KAAM,UACN,OAAQ,UACR,OAAQ,CAAA,CACV,GAC6C,OAAO,CAAC,IAAK,GAC5D,EAZA,AANA,WACE,IAAM,EAAY,GAClB,CAAA,SAAS,cAAc,CAAC,gBAAgB,SAAS,CAAG,EAAU,YAAY,CAC1E,SAAS,cAAc,CAAC,aAAa,SAAS,CAAG,EAAU,SAAS,AACtE,IAuDA,AAvCA,WACE,IAAM,EAAQ,IAAI,KAAK,GAEjB,EAAiB,SAAS,cAAc,CAAC,kBACzC,EAAM,IAAI,OAAO,WAAW,GAC5B,EAAU,IAAI,KAAK,CAAC,EAAE,EAAM,EAAE,eAAe,CAAC,EAC9C,CAAE,IAAA,CAAG,CAAE,aAAA,CAAY,CAAE,CAAG,IAC1B,EAAoB,IAAI,KAAK,GAC7B,EAAQ,EAEZ,KAAO,EAAoB,GAAS,CAClC,IAAM,EAAkB,IAAI,KAAK,EAAkB,OAAO,GAT3C,QAWT,EAAM,SAAS,aAAa,CAAC,MAG/B,GAAO,GAAqB,EAAM,GACpC,EAAI,SAAS,CAAC,GAAG,CAAC,aAGpB,IAAM,EAAW,SAAS,aAAa,CAAC,KACxC,CAAA,EAAS,SAAS,CAAG,CAAK,CAAC,EAAQ,EAAM,MAAM,CAAC,CAChD,EAAI,WAAW,CAAC,GAEhB,IAAM,EAAY,SAAS,aAAa,CAAC,KACzC,CAAA,EAAU,SAAS,CAAG,EAAW,GACjC,EAAI,WAAW,CAAC,GAEhB,IAAM,EAAU,SAAS,aAAa,CAAC,KACvC,CAAA,EAAQ,SAAS,CAAG,EAAW,GAC/B,EAAI,WAAW,CAAC,GAEhB,EAAe,WAAW,CAAC,GAE3B,EAAoB,EACpB,GACF,CACF,GAGF","sources":["<anon>","src/assets/script.js"],"sourcesContent":["window.addEventListener(\"DOMContentLoaded\", ()=>{\n    const versionElement = document.getElementById(\"version\");\n    if (versionElement) versionElement.textContent = window.APP_VERSION || \"unknown\";\n    const startDate = \"2024-06-27T12:00:00\";\n    const names = [\n        \"S.K\",\n        \"M.B.D\",\n        \"G.U\",\n        \"S.E\"\n    ];\n    function getShiftInfo() {\n        const now = new Date();\n        const start = new Date(startDate);\n        const msInWeek = 604800000; // ms for a week\n        const weeksPassed = Math.floor((now - start) / msInWeek);\n        const currentIndex = weeksPassed % names.length;\n        const currentShift = names[currentIndex];\n        const nextIndex = (currentIndex + 1) % names.length;\n        const nextShift = names[nextIndex];\n        return {\n            currentShift,\n            currentIndex,\n            nextShift,\n            now\n        };\n    }\n    function displayShiftInfo() {\n        const shiftInfo = getShiftInfo();\n        document.getElementById(\"currentShift\").innerText = shiftInfo.currentShift;\n        document.getElementById(\"nextShift\").innerText = shiftInfo.nextShift;\n    }\n    displayShiftInfo();\n    function formatDate(date) {\n        const options = {\n            day: \"2-digit\",\n            month: \"2-digit\",\n            year: \"numeric\",\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: false\n        };\n        return date.toLocaleString(\"tr-TR\", options).replace(\",\", \"\");\n    }\n    function generateYearlyShifts() {\n        const start = new Date(startDate);\n        const msInWeek = 604800000; // ms for a week\n        const shiftTableBody = document.getElementById(\"shiftTableBody\");\n        const add = new Date().getFullYear();\n        const yearEnd = new Date(`${add + 2}-06-27T12:00:00`);\n        const { now, currentIndex } = getShiftInfo();\n        let currentShiftStart = new Date(start);\n        let index = 0;\n        while(currentShiftStart < yearEnd){\n            const currentShiftEnd = new Date(currentShiftStart.getTime() + msInWeek);\n            const row = document.createElement(\"tr\");\n            // Highlight the current shift based on the date range\n            if (now >= currentShiftStart && now < currentShiftEnd) row.classList.add(\"highlight\");\n            const nameCell = document.createElement(\"td\");\n            nameCell.innerText = names[index % names.length];\n            row.appendChild(nameCell);\n            const startCell = document.createElement(\"td\");\n            startCell.innerText = formatDate(currentShiftStart);\n            row.appendChild(startCell);\n            const endCell = document.createElement(\"td\");\n            endCell.innerText = formatDate(currentShiftEnd);\n            row.appendChild(endCell);\n            shiftTableBody.appendChild(row);\n            currentShiftStart = currentShiftEnd;\n            index++;\n        }\n    }\n    generateYearlyShifts();\n});\n\n//# sourceMappingURL=index.6044cd89.js.map\n","window.addEventListener(\"DOMContentLoaded\", () => {\n  const versionElement = document.getElementById(\"version\");\n  if (versionElement) {\n    versionElement.textContent = window.APP_VERSION || \"unknown\";\n  }\n  const startDate = \"2024-06-27T12:00:00\";\n  const names = [\"S.K\", \"M.B.D\", \"G.U\", \"S.E\"];\n\n  function getShiftInfo() {\n    const now = new Date();\n    const start = new Date(startDate);\n    const msInWeek = 7 * 24 * 60 * 60 * 1000; // ms for a week\n    const weeksPassed = Math.floor((now - start) / msInWeek);\n    const currentIndex = weeksPassed % names.length;\n    const currentShift = names[currentIndex];\n    const nextIndex = (currentIndex + 1) % names.length;\n    const nextShift = names[nextIndex];\n    return { currentShift, currentIndex, nextShift, now };\n  }\n\n  function displayShiftInfo() {\n    const shiftInfo = getShiftInfo();\n    document.getElementById(\"currentShift\").innerText = shiftInfo.currentShift;\n    document.getElementById(\"nextShift\").innerText = shiftInfo.nextShift;\n  }\n\n  displayShiftInfo();\n\n  function formatDate(date) {\n    const options = {\n      day: \"2-digit\",\n      month: \"2-digit\",\n      year: \"numeric\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      hour12: false,\n    };\n    return date.toLocaleString(\"tr-TR\", options).replace(\",\", \"\");\n  }\n\n  function generateYearlyShifts() {\n    const start = new Date(startDate);\n    const msInWeek = 7 * 24 * 60 * 60 * 1000; // ms for a week\n    const shiftTableBody = document.getElementById(\"shiftTableBody\");\n    const add = new Date().getFullYear();\n    const yearEnd = new Date(`${add + 2}-06-27T12:00:00`);\n    const { now, currentIndex } = getShiftInfo();\n    let currentShiftStart = new Date(start);\n    let index = 0;\n\n    while (currentShiftStart < yearEnd) {\n      const currentShiftEnd = new Date(currentShiftStart.getTime() + msInWeek);\n\n      const row = document.createElement(\"tr\");\n\n      // Highlight the current shift based on the date range\n      if (now >= currentShiftStart && now < currentShiftEnd) {\n        row.classList.add(\"highlight\");\n      }\n\n      const nameCell = document.createElement(\"td\");\n      nameCell.innerText = names[index % names.length];\n      row.appendChild(nameCell);\n\n      const startCell = document.createElement(\"td\");\n      startCell.innerText = formatDate(currentShiftStart);\n      row.appendChild(startCell);\n\n      const endCell = document.createElement(\"td\");\n      endCell.innerText = formatDate(currentShiftEnd);\n      row.appendChild(endCell);\n\n      shiftTableBody.appendChild(row);\n\n      currentShiftStart = currentShiftEnd;\n      index++;\n    }\n  }\n\n  generateYearlyShifts();\n});\n"],"names":["window","addEventListener","versionElement","document","getElementById","textContent","APP_VERSION","startDate","names","getShiftInfo","now","Date","currentIndex","weeksPassed","Math","floor","length","currentShift","nextIndex","nextShift","formatDate","date","toLocaleString","day","month","year","hour","minute","hour12","replace","displayShiftInfo","shiftInfo","innerText","generateYearlyShifts","start","shiftTableBody","add","getFullYear","yearEnd","currentShiftStart","index","currentShiftEnd","getTime","row","createElement","classList","nameCell","appendChild","startCell","endCell"],"version":3,"file":"index.6044cd89.js.map"}